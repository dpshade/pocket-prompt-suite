name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  release-core:
    name: Release Core Binaries
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux  
            goarch: arm64
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64
          - goos: windows
            goarch: amd64
            
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Build binary
      working-directory: ./core
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        if [ "$GOOS" = "windows" ]; then
          go build -ldflags="-s -w" -o pocket-prompt.exe main.go
        else
          go build -ldflags="-s -w" -o pocket-prompt main.go
        fi
        
    - name: Create archive
      working-directory: ./core
      run: |
        if [ "${{ matrix.goos }}" = "windows" ]; then
          zip pocket-prompt-${{ matrix.goos }}-${{ matrix.goarch }}.zip pocket-prompt.exe
        else
          tar czf pocket-prompt-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz pocket-prompt
        fi
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: pocket-prompt-${{ matrix.goos }}-${{ matrix.goarch }}
        path: core/pocket-prompt-*
        
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [release-core]
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/**/*
        generate_release_notes: true
        draft: false
        prerelease: ${{ contains(github.ref_name, '-') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}